const { Telegraf } = require('telegraf');
const express = require('express');
const cors = require('cors');
const fetch = require('node-fetch');

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

let userAvatarUrl = '/img/vaatartatar.png'; // fallback

// –ö–æ–≥–¥–∞ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å –±–æ—Ç—É —Ñ–æ—Ç–æ ‚Äî –æ–Ω —Å–æ—Ö—Ä–∞–Ω–∏—Ç –µ–≥–æ URL
bot.on('photo', async (ctx) => {
    const photo = ctx.message.photo.pop(); // –±–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
    const fileId = photo.file_id;

    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        const file = await ctx.telegram.getFile(fileId);
        const fileUrl = `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN}/${file.file_path}`;
        
        userAvatarUrl = fileUrl;
        console.log('‚úÖ –ê–≤–∞—Ç–∞—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', fileUrl);

        await ctx.reply('–ê–≤–∞—Ç–∞—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ!');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏:', error);
        await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É.');
    }
});

// Express API –¥–ª—è —Å–∞–π—Ç–∞
const app = express();
app.use(cors());

app.get('/api/avatar', (req, res) => {
    res.json({ avatarUrl: userAvatarUrl });
});

const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
    console.log(`üì° API –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û—Ç–ø—Ä–∞–≤—å –µ–º—É —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É.`);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
